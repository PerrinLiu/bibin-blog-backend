<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.llpy.textservice.mapper.ArticleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.llpy.textservice.entity.Article">
        <id column="article_id" property="id"/>
        <result column="article_text_id" property="articleTextId"/>
        <result column="article_title" property="articleTitle"/>
        <result column="article_group_id" property="articleGroupId"/>
        <result column="comment_sum" property="commentSum"/>
        <result column="read_sum" property="readSum"/>
        <result column="collections_sum" property="collectionsSum"/>
        <result column="like_sum" property="likeSum"/>
        <result column="creat_by" property="creatBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        article_id, article_text_id, article_title, article_group_id, comment_sum, read_sum, collections_sum, like_sum, creat_by, create_time, update_time
    </sql>
    <update id="commentCountAddOne">
        UPDATE `article`
        SET `comment_sum` = `comment_sum` + 1
        WHERE `id` = #{articleId}

    </update>
    <update id="commentCountReduceOne">
        UPDATE `article`
        SET `comment_sum` = `comment_sum` - 1
        WHERE `id` = #{articleId}
    </update>
    <update id="updateCommentCount">
        UPDATE `article`
        SET `comment_sum` = #{sum}
        where `id` = #{articleId}
    </update>
    <select id="getArticleList" resultType="com.llpy.textservice.entity.Article">
        select *
        from article as a
        <where>
            <if test="searchText!=null">
                a.article_title like concat('%',#{searchText},'%')
            </if>
        </where>
        order by a.like_sum desc, a.create_time desc
    </select>
    <select id="listIndexArticle" resultType="com.llpy.textservice.entity.Article">
        select *
        from article as a
        order by a.create_time desc
        limit 0,5
    </select>
    <select id="selectCountByDate" resultType="com.llpy.textservice.entity.vo.ArticleCountVo">
        SELECT
            DATE(create_time) AS date,
            COUNT(*) AS count
        FROM
            article
        WHERE
            create_time BETWEEN DATE_SUB(NOW(), INTERVAL 6 MONTH)
                AND NOW()
        GROUP BY
            DATE(create_time)
        ORDER BY
            DATE(create_time);
    </select>

</mapper>
